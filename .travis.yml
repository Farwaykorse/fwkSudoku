##====---- .travis.yml                                                ----====##
language: cpp

git:
  depth: 20
  quiet: true

branches:
  except:
  - /^[Aa]pp[Vv]eyor.*/

env:
  global:
  # Ninja-build
  - NINJA_VER: v1.8.2
  - NINJA_SHA512: 38fcb68e745c1f15b4b50f20069ffe686b1ef5baf93b74958e132ea5d30d155cf6970d6dc1b095aafd421ebd8bcc63acf4f64e305c496266b5182f99b815cca5
  # vcpkg
  - TOOLCHAIN_FILE: "$HOME/tools/vcpkg/scripts/buildsystems/vcpkg.cmake"

##====--------------------------------------------------------------------====##
## Define Build Configurations
# No build matrix, each item in matrix:include is single build configuration.
#
# Building vcpkg requires at least g++-7
#
# Defaults
os: linux
dist: xenial

matrix:
  include:
  - name: GCC-8 Debug
    env:
    - C_compiler:   gcc-8
    - CXX_compiler: g++-8
    - CONFIGURATION: Debug
    addons: &GCC8
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-8

  - name: GCC-8 Release
    env:
    - C_compiler:   gcc-8
    - CXX_compiler: g++-8
    - CONFIGURATION: Release
    addons: *GCC8

  - name: GCC-7 Debug
    env:
    - C_compiler:   gcc-7
    - CXX_compiler: g++-7
    - CONFIGURATION: Debug
    addons: &GCC7
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7

  - name: GCC-7 Release
    env:
    - C_compiler:   gcc-7
    - CXX_compiler: g++-7
    - CONFIGURATION: Release
    addons: *GCC7

  - name: Clang-7 Debug
    dist: xenial
    env:
    - C_compiler:   clang
    - CXX_compiler: clang++
    - CONFIGURATION: Debug
    addons: &clang7
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7

  - name: Clang-7 Release
    dist: xenial
    env:
    - C_compiler:   clang
    - CXX_compiler: clang++
    - CONFIGURATION: Release
    addons: *clang7

  - name: Clang-7 libc++ Debug
    dist: xenial
    env:
    - C_compiler:   clang
    - CXX_compiler: clang++
    - CXX_lib: libc++
    - CONFIGURATION: Debug
    addons: &clang7lib
      apt:
        sources:
        - llvm-toolchain-xenial-7
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
        - libc++-7-dev
        - libc++abi-7-dev

  - name: Clang-7 libc++ Release
    dist: xenial
    env:
    - C_compiler:   clang
    - CXX_compiler: clang++
    - CXX_lib: libc++
    - CONFIGURATION: Release
    addons: *clang7lib

  - name: Clang-6.0 Debug
    dist: xenial
    env:
    - C_compiler: clang-6.0
    - CXX_compiler: clang++-6.0
    - CONFIGURATION: Debug
    addons: &clang6
      apt:
        sources:
        - llvm-toolchain-xenial-6.0
        - ubuntu-toolchain-r-test
        packages:
        - clang-6.0
        - g++-7

  - name: Clang-6.0 Release
    dist: xenial
    env:
    - C_compiler: clang-6.0
    - CXX_compiler: clang++-6.0
    - CONFIGURATION: Release
    addons: *clang6

  - name: Clang-5.0 Debug
    dist: xenial
    env:
    - C_compiler: clang-5.0
    - CXX_compiler: clang++-5.0
    - CONFIGURATION: Debug
    addons: &clang5
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - clang-5.0
        - g++-7

  - name: Clang-4.0 Debug
    dist: xenial
    env:
    - C_compiler: clang-4.0
    - CXX_compiler: clang++-4.0
    - CONFIGURATION: Debug
    addons: &clang4
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - clang-4.0
        - g++-7

  allow_failures:
  - name: Clang-7 libc++ Debug
  - name: Clang-7 libc++ Release
  - name: Clang-4.0 Debug

##====--------------------------------------------------------------------====##
## Install tools and dependencies
before_install:
- |
  # Setup
  set -e # stop Bash execution on error
  mkdir -p ~/tools
  eval "CC=${C_compiler:?} && CXX=${CXX_compiler:?}"
- |
  # Install Ninja-build
  (
    os=${TRAVIS_OS_NAME}
    file_name="ninja-${os}.zip"
    NINJA_URL="https://github.com/ninja-build/ninja/releases/download/${NINJA_VER}/${file_name}"
    cd ~/tools
    wget -q "${NINJA_URL}" --tries=3 -nc
    sum=$(sha512sum ${file_name})
    if [[ ${sum:0:128} = ${NINJA_SHA512} ]]; then
      unzip -q ${file_name} -d ninja
    else
      echo "Ninja hash has changed!"  >&2
      echo "Expecting: $NINJA_SHA512" >&2
      echo "Actual:    $sum"          >&2
      exit 1
    fi
  )
  export PATH=$PATH:$HOME/tools/ninja/
- |
  # Install vcpkg
  (
    cd ~/tools
    if [[ -x ./vcpkg/vcpkg ]]; then
      cd ./vcpkg
      git pull --quiet
    else
      git clone --depth=1 --branch=master --quiet https://github.com/Microsoft/vcpkg.git
      if [[ ${TRAVIS_OS_NAME} == linux && ${CXX_compiler} != g++* || ${CXX_compiler%g++-} < 7 ]]
      then
        eval "CC=gcc-7 && CXX=g++-7"
      fi
      ./vcpkg/bootstrap-vcpkg.sh
    fi
  )
- |
  # Using libc++
  if [[ ${CXX_compiler} == clang* && ${CXX_lib} ]]; then
    FLAGS="-stdlib=${CXX_lib}"
    #if [[ ${CXX_lib} == libc++ ]]; then
    #  FLAGS="${FLAGS} -lc++fs"
    #  FLAGS="${FLAGS} -lc++experimental"
    #fi
    export CXXFLAGS="${CXXFLAGS} ${FLAGS}"
  fi

install:
- cd ~/tools/vcpkg
- ./vcpkg install ms-gsl
- ./vcpkg install gtest

##====--------------------------------------------------------------------====##
before_script:
- |
  # Configuration
  cd "${TRAVIS_BUILD_DIR}"
  mkdir -p build
  cd build
  GeneratorFlags='-k 10' # Ninja
  export CFLAGS="${CFLAGS} -Werror"
  export CXXFLAGS="${CXXFLAGS} -Werror"
- >
  CMakeGenFlags="-G Ninja
    -DCMAKE_TOOLCHAIN_FILE=${TOOLCHAIN_FILE:?}
    -Wdev
    -Werror=dev
    --warn-uninitialized
  " && echo $CMakeGenFlags
- |
  CMakeBuildFlags="--config ${CONFIGURATION:?} -- ${GeneratorFlags=}"
  echo $CMakeBuildFlags

script:
- cmake ${CMakeGenFlags:?} ..
- cmake --build . ${CMakeBuildFlags:?}

##====--------------------------------------------------------------------====##
before_cache:
- |
  # Cleaning build cache
  rm -rf ~/tools/vcpkg/buildtrees
  rm -rf ~/tools/vcpkg/downloads

cache:
  directories:
  - ~/tools/vcpkg

##====--------------------------------------------------------------------====##
after_script: true
