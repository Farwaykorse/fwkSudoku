<?xml version="1.0" encoding="utf-8"?>
<!--  Sudoku/Options.natvis                                                  //
//
//  Support for Sudoku::Options<N> in debugger visualizer
//===-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-===//
//
//  Views: use by adding ",view(simple)" after element-name in debugger
//    simple: don't display size
//===-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-->
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <Type Name="Sudoku::Options&lt;*&gt;">
    <!--Template items: $T1 -->

    <!-- Display answer, if set -->
    <DisplayString Condition="$T1 == 1">
      ans: {data_[0]*1}
    </DisplayString>
    <DisplayString Condition="$T1 == 4">
      <!-- Show list of available options, space after 2 elements -->
      {data_[0]*1}{data_[1]*2} {data_[2]*3}{data_[3]*4}
    </DisplayString>
    <DisplayString Condition="$T1 == 9">
      <!-- Show list of available options, space after 3 elements -->
      {data_[0]*1}{data_[1]*2}{data_[2]*3} {
      data_[3]*4}{data_[4]*5}{data_[5]*6} {
      data_[6]*7}{data_[7]*8}{data_[8]*9}
    </DisplayString>
    <DisplayString Condition="$T1 == 16">
      <!-- Show list of available options, space after 4 elements -->
      {data_[0]*1}{data_[1]*2}{data_[2]*3}{data_[3]*4} {
       data_[4]*5}{data_[5]*6}{data_[6]*7}{data_[7]*8} {
       data_[9]*9}{data_[9]*10}{data_[10]*11}{data_[11]*12} {
       data_[12]*13}{data_[13]*14}{data_[14]*15}{data_[15]*16}
    </DisplayString>
    <DisplayString>
      <!-- Default Value string -->
      Options&lt;{$T1}&gt; {DebugString()}
    </DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">(int)$T1</Item>
      <CustomListItems>
        <Variable Name="option_count" InitialValue="0"/>
        <Variable Name="iCount" InitialValue="0"/>
        <Variable Name="iEnd" InitialValue="$T1"/>
        <Variable Name="pItem" InitialValue="true"/>
        <Size>$T1 + 1</Size><!-- +1 to show [answer] or [option_count] -->
        <Loop>
          <Break Condition="iCount >= iEnd"/>
          <If Condition="data_[iCount]">
            <Exec>option_count++</Exec>
          </If>
          <Exec>iCount++</Exec>
        </Loop>
        <If Condition="option_count == 1">
          <!--Display answer value-->
          <Exec>iCount = 0</Exec><!--reset-->
          <Loop>
            <Break Condition="data_[iCount]"/>
            <Exec>iCount++</Exec>
            <Break Condition="iCount > iEnd"/>
          </Loop>
          <Item Name="[answer]">iCount + 1</Item>
        </If>
        <Else>
          <!--Display option_count-->
          <Item Name="[option_count]">option_count</Item>
        </Else>
        <Exec>iCount = 0</Exec><!--reset-->
        <Loop>
          <!--Display option-bits-->
          <Break Condition="iCount >= iEnd"/>
          <Exec>pItem = data_[iCount]</Exec>
          <Exec>iCount++</Exec><!-- item numbers starting at 1 -->
          <Item Name="{iCount}">(bool)pItem</Item>
        </Loop>
      </CustomListItems>
      <Synthetic Name="[unsigned long]" ExcludeView="simple" Optional="true">
        <DisplayString Optional="true">{data_.to_ulong()}</DisplayString>
      </Synthetic>
      <Synthetic Name="[string]" ExcludeView="simple" Optional="true">
        <DisplayString Optional="true">{DebugString()}</DisplayString>
      </Synthetic>
    </Expand>
  </Type>
</AutoVisualizer>
